{"version":3,"sources":["../../../../src/http/routes/account/update-account.ts","../../../../src/errors/messages.ts","../../../../../../node_modules/.pnpm/@t3-oss+env-core@0.11.1_typescript@5.6.3_zod@3.23.8/node_modules/@t3-oss/env-core/dist/index.js","../../../../../../node_modules/.pnpm/@t3-oss+env-nextjs@0.11.1_typescript@5.6.3_zod@3.23.8/node_modules/@t3-oss/env-nextjs/dist/index.js","../../../../../../packages/env/index.ts","../../../../src/lib/mail.ts","../../../../src/http/emails/template/change-account-email.template.ts","../../../../src/http/emails/change-account-email.ts","../../../../src/http/middlewares/auth.ts","../../../../src/lib/prisma.ts","../../../../src/http/routes/_errors/unauthorized-error.ts","../../../../src/http/routes/_errors/bad-request-error.ts"],"sourcesContent":["import { FastifyInstance } from 'fastify'\nimport { ZodTypeProvider } from 'fastify-type-provider-zod'\nimport { z } from 'zod'\n\nimport { errors } from '@/errors/messages'\nimport { changeAccountEmail } from '@/http/emails/change-account-email'\nimport { auth } from '@/http/middlewares/auth'\nimport { prisma } from '@/lib/prisma'\n\nimport { BadRequestError } from '../_errors/bad-request-error'\n\nexport async function updateAccount(app: FastifyInstance) {\n\tapp\n\t\t.withTypeProvider<ZodTypeProvider>()\n\t\t.register(auth)\n\t\t.put(\n\t\t\t'/users',\n\t\t\t{\n\t\t\t\tschema: {\n\t\t\t\t\ttags: ['Account'],\n\t\t\t\t\tsummary: 'Update account informations.',\n\t\t\t\t\tsecurity: [{ bearerAuth: [] }],\n\t\t\t\t\tbody: z.object({\n\t\t\t\t\t\tname: z.string(),\n\t\t\t\t\t\temail: z.string().email(),\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t},\n\t\t\tasync (request, reply) => {\n\t\t\t\tconst userId = await request.getCurrentUserId()\n\t\t\t\tconst { email: newEmail, name } = request.body\n\n\t\t\t\tconst userWithSameEmail = await prisma.user.findFirst({\n\t\t\t\t\twhere: {\n\t\t\t\t\t\temail: newEmail,\n\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\tnot: userId,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tif (userWithSameEmail) {\n\t\t\t\t\tthrow new BadRequestError(errors.user.ALREADY_EXISTS)\n\t\t\t\t}\n\n\t\t\t\tconst currentUser = await prisma.user.findUnique({\n\t\t\t\t\twhere: {\n\t\t\t\t\t\tid: userId,\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tif (!currentUser) {\n\t\t\t\t\tthrow new BadRequestError(errors.user.NOT_FOUND)\n\t\t\t\t}\n\n\t\t\t\tconst hasAnEmailChangePending = await prisma.token.findFirst({\n\t\t\t\t\twhere: {\n\t\t\t\t\t\tuserId,\n\t\t\t\t\t\ttype: 'EMAIL_CHANGE_VALIDATION',\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tconst { email: currentEmail } = currentUser\n\n\t\t\t\tif (currentEmail !== newEmail && !hasAnEmailChangePending) {\n\t\t\t\t\tconst { id: verificationCode } = await prisma.token.create({\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tuserId,\n\t\t\t\t\t\t\ttype: 'EMAIL_CHANGE_VALIDATION',\n\t\t\t\t\t\t\tpayload: newEmail,\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait changeAccountEmail({\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\toldEmail: currentEmail,\n\t\t\t\t\t\t\tnewEmail,\n\t\t\t\t\t\t\tcode: verificationCode,\n\t\t\t\t\t\t})\n\t\t\t\t\t} catch {\n\t\t\t\t\t\tthrow new BadRequestError(errors.services.SEND_EMAIL)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tawait prisma.user.update({\n\t\t\t\t\twhere: {\n\t\t\t\t\t\tid: userId,\n\t\t\t\t\t},\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname,\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\treply.status(204).send()\n\t\t\t},\n\t\t)\n}\n","/* eslint-disable prettier/prettier */\nexport const errors = {\n\tapi: {\n\t\tVALIDATION_ERROR: 'Validation error',\n\t\tSERVER_ERROR: 'Internal server error',\n\t},\n\tservices: {\n\t\tSEND_EMAIL: 'An error occurred while trying to send the e-mail',\n\t\tGITHUB_ALREADY_CONNECTED: 'You already have a GitHub account connected',\n\t\tGITHUB_ALREADY_CONNECTED_SOMEONE_ELSE: 'This Github account is already connected with another account',\n\t\tGOOGLE_ALREADY_CONNECTED: 'You already have a Google account connected',\n\t\tGOOGLE_ALREADY_CONNECTED_SOMEONE_ELSE: 'This Google account is already connected with another account',\n\t},\n\tuser: {\n\t\tALREADY_EXISTS: 'An user with same e-mail already exists',\n\t\tNOT_FOUND: 'User not found',\n\t\tACCOUNT_NOT_FOUND: 'Account not found',\n\t\tEMAIL_VALIDATION_NOT_FOUND: 'E-mail change validation not found',\n\t\tEMAIL_VALIDATION_EXPIRED: 'E-mail change validation does not exists or already expired',\n\t\tEMAIL_VALIDATION_INVALID: 'Invalid validation code'\n\t},\n\tauth: {\n\t\tNOT_PASSWORD_FOUND: 'User does not have a password, use social sign-in',\n\t\tINVALID_CREDENTIALS: 'Invalid credentials',\n\t\tINVALID_TOKEN: 'Invalid authentication token',\n\t\tINVALID_EMAIL_TOKEN: 'The token provied is not valid. Note: The code is valid for 5 minutes',\n\t\tINVALID_PASSWORD_TOKEN: 'Unable to reset password. Ensure your recovery code is valid and try again. Note: The code is valid for 5 minutes',\n\t\tLAST_METHOD_AVAILABLE: 'This service is the only access method available. Set a password or connect with another provider first',\n\t\tGITHUB_EMAIL_NOT_FOUND: 'Your GitHub account does not have an e-mail to authenticate',\n\t\tPASSWORD_NUMBER: 'Enter one number.',\n\t\tPASSWORD_UPPER: 'Enter one upper case letter.',\n\t\tPASSWORD_LOWER: 'Enter one lower case letter.',\n\t\tPASSWORD_SPECIAL: 'Enter one special character.',\n\t\tPASSWORD_LENGTH: 'Enter at least 6 characters.',\n\t},\n\torganizations: {\n\t\tentity: {\n\t\t\tNOT_FOUND: 'Organization not found',\n\t\t\tNOT_MEMBER: 'The user is not a member of this organization',\n\t\t\tALREADY_EXISTS: 'There is another organization using the same name. Choose a different one',\n\t\t\tCANNOT_SHUTDOWN: 'You are not allowed to shutdown this organization',\n\t\t\tCANNOT_TRANSFER: 'You are not allowed to transfer ownership of this organization',\n\t\t\tCANNOT_UPDATE: 'You are not allowed to update this organization',\n\t\t\tCANNOT_LEAVE: 'You are the owner of this organization, to leave it you must transfer the ownership first',\n\t\t},\n\t\tbilling: {\n\t\t\tCANNOT_LIST: 'You are not allowed to get billing details from this organization',\n\t\t},\n\t\tdomain: {\n\t\t\tALREADY_EXISTS: 'Another organization with same domain already exists',\n\t\t\tCHECK_DNS: 'Error checking DNS information',\n\t\t\tTXT_NOT_FOUND: 'A valid TXT record was not found in the DNS records',\n\t\t\tTXT_INVALID: 'A valid TXT record was found, but does not match in the DNS records. Check your DNS values.',\n\t\t},\n\t\tmembers: {\n\t\t\tCANNOT_ACCESS: 'You are not a member of this organization',\n\t\t\tCANNOT_LIST: 'You are not allowed to list organization members',\n\t\t\tCANNOT_DELETE: 'You are not allowed to remove this organization member',\n\t\t\tCANNOT_UPDATE: 'You are not allowed to update this organization member',\n\t\t},\n\t\tinvites: {\n\t\t\tNOT_FOUND: 'Invite not found or expired',\n\t\t\tNOT_ALLOWED: 'This invite belongs to another user',\n\t\t\tAUTOJOIN_DOMAIN: 'Users with {domain} domain will join your organization automatically on sign in',\n\t\t\tALREADY_EXISTS: 'Another invite with same e-mail already exists',\n\t\t\tALREADY_MEMBER: 'A member with this e-mail already belongs to your organization',\n\t\t\tCANNOT_SEND: 'You are not allowed to create a new invite',\n\t\t\tCANNOT_LIST: 'You are not allowed to get organization invites',\n\t\t\tCANNOT_REVOKE: 'You are not allowed to revoke an invite',\n\t\t},\n\t},\n\tprojects: {\n\t\tNOT_FOUND: 'Project not found',\n\t\tALREADY_EXISTS: 'There is another project in this organization using the same project name. Choose a different one',\n\t\tCANNOT_LIST: 'You are not allowed to list projects',\n\t\tCANNOT_GET: 'You are not allowed to get a project',\n\t\tCANNOT_CREATE: 'You are not allowed to create a new project',\n\t\tCANNOT_UPDATE: 'You are not allowed to update this project',\n\t\tCANNOT_DELETE: 'You are not allowed to remove this project',\n\t},\n\tfiles: {\n\t\tNOT_FOUND: 'Select a file to update',\n\t\tMAX_SIZE: 'Your avatar must have less than 2mb',\n\t\tPROCESSING: 'An unexpected error occurred while processing your file', \n\t\tFORMAT: 'The file selected is not a valid image',\n\t\tUPLOAD: 'An unexpected error occurred during file upload',\n\t\tDELETE: 'An unexpected error occurred during file removal',\n\t}\n}\n","import { object } from 'zod';\n\nfunction createEnv(opts) {\n    const runtimeEnv = opts.runtimeEnvStrict ?? opts.runtimeEnv ?? process.env;\n    const emptyStringAsUndefined = opts.emptyStringAsUndefined ?? false;\n    if (emptyStringAsUndefined) {\n        for (const [key, value] of Object.entries(runtimeEnv)){\n            if (value === \"\") {\n                delete runtimeEnv[key];\n            }\n        }\n    }\n    const skip = !!opts.skipValidation;\n    // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n    if (skip) return runtimeEnv;\n    const _client = typeof opts.client === \"object\" ? opts.client : {};\n    const _server = typeof opts.server === \"object\" ? opts.server : {};\n    const _shared = typeof opts.shared === \"object\" ? opts.shared : {};\n    const client = object(_client);\n    const server = object(_server);\n    const shared = object(_shared);\n    const isServer = opts.isServer ?? (typeof window === \"undefined\" || \"Deno\" in window);\n    const allClient = client.merge(shared);\n    const allServer = server.merge(shared).merge(client);\n    const parsed = isServer ? allServer.safeParse(runtimeEnv) // on server we can validate all env vars\n     : allClient.safeParse(runtimeEnv); // on client we can only validate the ones that are exposed\n    const onValidationError = opts.onValidationError ?? ((error)=>{\n        console.error(\"❌ Invalid environment variables:\", error.flatten().fieldErrors);\n        throw new Error(\"Invalid environment variables\");\n    });\n    const onInvalidAccess = opts.onInvalidAccess ?? ((_variable)=>{\n        throw new Error(\"❌ Attempted to access a server-side environment variable on the client\");\n    });\n    if (parsed.success === false) {\n        return onValidationError(parsed.error);\n    }\n    const isServerAccess = (prop)=>{\n        if (!opts.clientPrefix) return true;\n        return !prop.startsWith(opts.clientPrefix) && !(prop in shared.shape);\n    };\n    const isValidServerAccess = (prop)=>{\n        return isServer || !isServerAccess(prop);\n    };\n    const ignoreProp = (prop)=>{\n        return prop === \"__esModule\" || prop === \"$$typeof\";\n    };\n    const extendedObj = (opts.extends ?? []).reduce((acc, curr)=>{\n        return Object.assign(acc, curr);\n    }, {});\n    const fullObj = Object.assign(parsed.data, extendedObj);\n    const env = new Proxy(fullObj, {\n        get (target, prop) {\n            if (typeof prop !== \"string\") return undefined;\n            if (ignoreProp(prop)) return undefined;\n            if (!isValidServerAccess(prop)) return onInvalidAccess(prop);\n            return Reflect.get(target, prop);\n        }\n    });\n    // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n    return env;\n}\n\nexport { createEnv };\n","import { createEnv as createEnv$1 } from '@t3-oss/env-core';\n\nconst CLIENT_PREFIX = \"NEXT_PUBLIC_\";\nfunction createEnv(opts) {\n    const client = typeof opts.client === \"object\" ? opts.client : {};\n    const server = typeof opts.server === \"object\" ? opts.server : {};\n    const shared = opts.shared;\n    const runtimeEnv = opts.runtimeEnv ? opts.runtimeEnv : {\n        ...process.env,\n        ...opts.experimental__runtimeEnv\n    };\n    return createEnv$1({\n        ...opts,\n        shared,\n        client,\n        server,\n        clientPrefix: CLIENT_PREFIX,\n        runtimeEnv\n    });\n}\n\nexport { createEnv };\n","/* eslint-disable prettier/prettier */\nimport { createEnv } from '@t3-oss/env-nextjs'\nimport { z } from 'zod'\n\nexport const env = createEnv({\n\tserver: {\n\t\tDATABASE_URL: z.string(),\n\t\tPORT: z.coerce.number().default(3333),\n\n\t\tJWT_SECRET_KEY: z.string(),\n\t\tJWT_PUBLIC_KEY: z.string(),\n\n\t\tGITHUB_OAUTH_CLIENT_ID: z.string(),\n\t\tGITHUB_OAUTH_CLIENT_SECRET: z.string(),\n\t\tGITHUB_OAUTH_CLIENT_REDIRECT_URI: z.string().url(),\n\t\tGITHUB_OAUTH_CLIENT_SCOPE: z.string().default('user'),\n\n\t\tGOOGLE_OAUTH_CLIENT_ID: z.string(),\n\t\tGOOGLE_OAUTH_CLIENT_SECRET: z.string(),\n\t\tGOOGLE_OAUTH_CLIENT_REDIRECT_URI: z.string().url(),\n\t\tGOOGLE_OAUTH_CLIENT_RESPONSE_TYPE: z.string().default('code'),\n\t\tGOOGLE_OAUTH_CLIENT_SCOPE: z.string().default('https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile'),\n\n\t\tMAIL_SMTP_HOST: z.string().default('smtp.gmail.com'),\n\t\tMAIL_SMTP_PORT: z.coerce.number().default(465),\n\t\tMAIL_SMTP_EMAIL: z.string(),\n\t\tMAIL_SMTP_PASSWORD: z.string(),\n\n\t\tCLOUDFLARE_ACCOUNT_ID: z.string(),\n\t\tCLOUDFLARE_ENDPOINT: z.string(),\n\t\tCLOUDFLARE_BUCKET: z.string(),\n\t\tCLOUDFLARE_REGION: z.string().default('auto'),\n\t\tCLOUDFLARE_ACCESS_KEY: z.string(),\n\t\tCLOUDFLARE_SECRET_KEY: z.string(),\n\t},\n\n\tclient: {},\n\n\tshared: {\n\t\tNEXT_PUBLIC_URL: z.string().url(),\n\t\tNEXT_PUBLIC_API_URL: z.string().url(),\n\t\tNEXT_PUBLIC_CLOUDFLARE_URL: z.string(),\n\t},\n\n\truntimeEnv: {\n\t\tDATABASE_URL: process.env.DATABASE_URL,\n\t\tPORT: process.env.PORT,\n\t\tNEXT_PUBLIC_URL: process.env.NEXT_PUBLIC_URL,\n\t\tNEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL,\n\t\tJWT_SECRET_KEY: process.env.JWT_SECRET_KEY,\n\t\tJWT_PUBLIC_KEY: process.env.JWT_PUBLIC_KEY,\n\t\tGITHUB_OAUTH_CLIENT_ID: process.env.GITHUB_OAUTH_CLIENT_ID,\n\t\tGITHUB_OAUTH_CLIENT_SECRET: process.env.GITHUB_OAUTH_CLIENT_SECRET,\n\t\tGITHUB_OAUTH_CLIENT_REDIRECT_URI: process.env.GITHUB_OAUTH_CLIENT_REDIRECT_URI,\n\t\tGITHUB_OAUTH_CLIENT_SCOPE: process.env.GITHUB_OAUTH_CLIENT_SCOPE,\n\t\tGOOGLE_OAUTH_CLIENT_ID: process.env.GOOGLE_OAUTH_CLIENT_ID,\n\t\tGOOGLE_OAUTH_CLIENT_SECRET: process.env.GOOGLE_OAUTH_CLIENT_SECRET,\n\t\tGOOGLE_OAUTH_CLIENT_REDIRECT_URI: process.env.GOOGLE_OAUTH_CLIENT_REDIRECT_URI,\n\t\tGOOGLE_OAUTH_CLIENT_RESPONSE_TYPE: process.env.GOOGLE_OAUTH_CLIENT_RESPONSE_TYPE,\n\t\tGOOGLE_OAUTH_CLIENT_SCOPE: process.env.GOOGLE_OAUTH_CLIENT_SCOPE,\n\t\tMAIL_SMTP_HOST: process.env.MAIL_SMTP_HOST,\n\t\tMAIL_SMTP_PORT: process.env.MAIL_SMTP_PORT,\n\t\tMAIL_SMTP_EMAIL: process.env.MAIL_SMTP_EMAIL,\n\t\tMAIL_SMTP_PASSWORD: process.env.MAIL_SMTP_PASSWORD,\n\t\tCLOUDFLARE_ACCOUNT_ID: process.env.CLOUDFLARE_ACCOUNT_ID,\n\t\tCLOUDFLARE_ENDPOINT: process.env.CLOUDFLARE_ENDPOINT,\n\t\tCLOUDFLARE_BUCKET: process.env.CLOUDFLARE_BUCKET,\n\t\tCLOUDFLARE_REGION: process.env.CLOUDFLARE_REGION,\n\t\tCLOUDFLARE_ACCESS_KEY: process.env.CLOUDFLARE_ACCESS_KEY,\n\t\tCLOUDFLARE_SECRET_KEY: process.env.CLOUDFLARE_SECRET_KEY,\n\t\tNEXT_PUBLIC_CLOUDFLARE_URL: process.env.NEXT_PUBLIC_CLOUDFLARE_URL,\n\t},\n\temptyStringAsUndefined: true,\n})\n","import { env } from '@saas/env'\nimport nodemailer from 'nodemailer'\n\nexport const emailService = nodemailer.createTransport({\n\thost: env.MAIL_SMTP_HOST,\n\tport: env.MAIL_SMTP_PORT,\n\tsecure: true,\n\tauth: {\n\t\tuser: env.MAIL_SMTP_EMAIL,\n\t\tpass: env.MAIL_SMTP_PASSWORD,\n\t},\n})\n","interface VerifyAccountEmailTemplateParams {\n\tname: string | null\n\toldEmail: string\n\tnewEmail: string\n\tcode: string\n\tlink: string\n}\n\nexport function changeAccountEmailTemplate({\n\tname,\n\toldEmail,\n\tnewEmail,\n\tcode,\n\tlink,\n}: VerifyAccountEmailTemplateParams) {\n\treturn `\n\t\t<p style=\"margin:0 0 0.25rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\tHi, ${name ? name.split(' ').at(0) + '!' : ''}\n\t\t</p>\n\t\t<p style=\"margin:0 0 1rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\tWe received a request to verify your new e-mail address on our platform.\n\t\t</p>\n\n\t\t<p style=\"margin:0 0 0.25rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\tYou are about to change your e-mail from ${oldEmail} to ${newEmail}. \n\t\t</p>\n\t\t<p style=\"margin:0 0 1rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\tTo proceed, please use the unique validation code below:\n\t\t</p>\n\n\t\t<p style=\"margin:0 0 1rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\t<strong>Validation Code:</strong>\n\t\t</p>\n\t\t<p style=\"margin:0 0 1rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\t${code}\n\t\t</p>\n\n\t\t<p style=\"margin:0 0 1rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\t<i>Note: The code is valid for 5 minutes.</i>\n\t\t</p>\n\n\t\t<p style=\"margin:0 0 1rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\t<strong>Here’s what to do next:</strong>\n\t\t</p>\n\n\t\t<p style=\"margin:0 0 0.25rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\t1. Copy the validation code provided above.\n\t\t</p>\n\t\t<p style=\"margin:0 0 0.25rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\t2. Click the link to proceed with validation:\n\t\t\t<a href=\"${link}\" style=\"text-decoration:underline;color:currentColor;\">Complete E-mail Verification</a>\n\t\t</p>\n\t\t<p style=\"margin:0 0 1rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\t3. Paste the code when prompted on the verification page.\n\t\t</p>\n\n\t\t<p style=\"margin:0 0 1rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\tIf you did not request this, you can safely ignore this email.\n\t\t</p>\n\n\t\t<p style=\"margin:0 0 0.25rem;line-height:1.5;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:14px;\">\n\t\t\tThanks.\n\t\t</p>\n\t`\n}\n","import { env } from '@saas/env'\nimport Mail from 'nodemailer/lib/mailer'\n\nimport { emailService } from '@/lib/mail'\n\nimport { changeAccountEmailTemplate } from './template/change-account-email.template'\n\ninterface ChangeAccountEmailParams {\n\tname: string | null\n\toldEmail: string\n\tnewEmail: string\n\tcode: string\n}\n\nexport async function changeAccountEmail({\n\tname,\n\toldEmail,\n\tnewEmail,\n\tcode,\n}: ChangeAccountEmailParams) {\n\tconst htmlTemplate = changeAccountEmailTemplate({\n\t\tname,\n\t\tcode,\n\t\toldEmail,\n\t\tnewEmail,\n\t\tlink: `${env.NEXT_PUBLIC_URL}/account/settings`,\n\t})\n\n\tconst emailOptions: Mail.Options = {\n\t\tfrom: env.MAIL_SMTP_EMAIL,\n\t\tto: newEmail,\n\t\tsubject: 'Your New Account E-mail Verification Code',\n\t\thtml: htmlTemplate,\n\t}\n\n\tawait emailService.sendMail(emailOptions)\n}\n","import { FastifyInstance } from 'fastify'\nimport fastifyPlugin from 'fastify-plugin'\n\nimport { errors } from '@/errors/messages'\nimport { prisma } from '@/lib/prisma'\n\nimport { UnauthorizedError } from '../routes/_errors/unauthorized-error'\n\nexport const auth = fastifyPlugin(async (app: FastifyInstance) => {\n\tapp.addHook('preHandler', async (request) => {\n\t\trequest.getCurrentUserId = async () => {\n\t\t\ttry {\n\t\t\t\tconst { sub } = await request.jwtVerify<{ sub: string }>()\n\n\t\t\t\treturn sub\n\t\t\t} catch (error) {\n\t\t\t\tthrow new UnauthorizedError(errors.auth.INVALID_TOKEN)\n\t\t\t}\n\t\t}\n\n\t\trequest.getCurrentUserMembership = async (slug: string) => {\n\t\t\tconst userId = await request.getCurrentUserId()\n\n\t\t\tconst member = await prisma.member.findFirst({\n\t\t\t\twhere: {\n\t\t\t\t\tuserId,\n\t\t\t\t\torganization: {\n\t\t\t\t\t\tslug,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tinclude: {\n\t\t\t\t\torganization: true,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tif (!member) {\n\t\t\t\tthrow new UnauthorizedError(errors.organizations.members.CANNOT_ACCESS)\n\t\t\t}\n\n\t\t\tconst { organization, ...membership } = member\n\n\t\t\treturn {\n\t\t\t\torganization,\n\t\t\t\tmembership,\n\t\t\t}\n\t\t}\n\t})\n})\n","import { PrismaClient } from '@prisma/client'\n\nexport const prisma = new PrismaClient()\n","export class UnauthorizedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message ?? 'Unauthorized.')\n\t}\n}\n","export class BadRequestError extends Error {}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,IAAAA,cAAkB;;;ACDX,IAAM,SAAS;AAAA,EACrB,KAAK;AAAA,IACJ,kBAAkB;AAAA,IAClB,cAAc;AAAA,EACf;AAAA,EACA,UAAU;AAAA,IACT,YAAY;AAAA,IACZ,0BAA0B;AAAA,IAC1B,uCAAuC;AAAA,IACvC,0BAA0B;AAAA,IAC1B,uCAAuC;AAAA,EACxC;AAAA,EACA,MAAM;AAAA,IACL,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,mBAAmB;AAAA,IACnB,4BAA4B;AAAA,IAC5B,0BAA0B;AAAA,IAC1B,0BAA0B;AAAA,EAC3B;AAAA,EACA,MAAM;AAAA,IACL,oBAAoB;AAAA,IACpB,qBAAqB;AAAA,IACrB,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,wBAAwB;AAAA,IACxB,uBAAuB;AAAA,IACvB,wBAAwB;AAAA,IACxB,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,EAClB;AAAA,EACA,eAAe;AAAA,IACd,QAAQ;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,eAAe;AAAA,MACf,cAAc;AAAA,IACf;AAAA,IACA,SAAS;AAAA,MACR,aAAa;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACP,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,eAAe;AAAA,MACf,aAAa;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACR,eAAe;AAAA,MACf,aAAa;AAAA,MACb,eAAe;AAAA,MACf,eAAe;AAAA,IAChB;AAAA,IACA,SAAS;AAAA,MACR,WAAW;AAAA,MACX,aAAa;AAAA,MACb,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,aAAa;AAAA,MACb,eAAe;AAAA,IAChB;AAAA,EACD;AAAA,EACA,UAAU;AAAA,IACT,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,eAAe;AAAA,IACf,eAAe;AAAA,EAChB;AAAA,EACA,OAAO;AAAA,IACN,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,EACT;AACD;;;ACxFA,iBAAuB;AAEvB,SAAS,UAAU,MAAM;AACrB,QAAM,aAAa,KAAK,oBAAoB,KAAK,cAAc,QAAQ;AACvE,QAAM,yBAAyB,KAAK,0BAA0B;AAC9D,MAAI,wBAAwB;AACxB,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,UAAU,GAAE;AAClD,UAAI,UAAU,IAAI;AACd,eAAO,WAAW,GAAG;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AACA,QAAM,OAAO,CAAC,CAAC,KAAK;AAEpB,MAAI,KAAM,QAAO;AACjB,QAAM,UAAU,OAAO,KAAK,WAAW,WAAW,KAAK,SAAS,CAAC;AACjE,QAAM,UAAU,OAAO,KAAK,WAAW,WAAW,KAAK,SAAS,CAAC;AACjE,QAAM,UAAU,OAAO,KAAK,WAAW,WAAW,KAAK,SAAS,CAAC;AACjE,QAAM,aAAS,mBAAO,OAAO;AAC7B,QAAM,aAAS,mBAAO,OAAO;AAC7B,QAAM,aAAS,mBAAO,OAAO;AAC7B,QAAM,WAAW,KAAK,aAAa,OAAO,WAAW,eAAe,UAAU;AAC9E,QAAM,YAAY,OAAO,MAAM,MAAM;AACrC,QAAM,YAAY,OAAO,MAAM,MAAM,EAAE,MAAM,MAAM;AACnD,QAAM,SAAS,WAAW,UAAU,UAAU,UAAU,IACrD,UAAU,UAAU,UAAU;AACjC,QAAM,oBAAoB,KAAK,sBAAsB,CAAC,UAAQ;AAC1D,YAAQ,MAAM,yCAAoC,MAAM,QAAQ,EAAE,WAAW;AAC7E,UAAM,IAAI,MAAM,+BAA+B;AAAA,EACnD;AACA,QAAM,kBAAkB,KAAK,oBAAoB,CAAC,cAAY;AAC1D,UAAM,IAAI,MAAM,6EAAwE;AAAA,EAC5F;AACA,MAAI,OAAO,YAAY,OAAO;AAC1B,WAAO,kBAAkB,OAAO,KAAK;AAAA,EACzC;AACA,QAAM,iBAAiB,CAAC,SAAO;AAC3B,QAAI,CAAC,KAAK,aAAc,QAAO;AAC/B,WAAO,CAAC,KAAK,WAAW,KAAK,YAAY,KAAK,EAAE,QAAQ,OAAO;AAAA,EACnE;AACA,QAAM,sBAAsB,CAAC,SAAO;AAChC,WAAO,YAAY,CAAC,eAAe,IAAI;AAAA,EAC3C;AACA,QAAM,aAAa,CAAC,SAAO;AACvB,WAAO,SAAS,gBAAgB,SAAS;AAAA,EAC7C;AACA,QAAM,eAAe,KAAK,WAAW,CAAC,GAAG,OAAO,CAAC,KAAK,SAAO;AACzD,WAAO,OAAO,OAAO,KAAK,IAAI;AAAA,EAClC,GAAG,CAAC,CAAC;AACL,QAAM,UAAU,OAAO,OAAO,OAAO,MAAM,WAAW;AACtD,QAAMC,OAAM,IAAI,MAAM,SAAS;AAAA,IAC3B,IAAK,QAAQ,MAAM;AACf,UAAI,OAAO,SAAS,SAAU,QAAO;AACrC,UAAI,WAAW,IAAI,EAAG,QAAO;AAC7B,UAAI,CAAC,oBAAoB,IAAI,EAAG,QAAO,gBAAgB,IAAI;AAC3D,aAAO,QAAQ,IAAI,QAAQ,IAAI;AAAA,IACnC;AAAA,EACJ,CAAC;AAED,SAAOA;AACX;;;AC1DA,IAAM,gBAAgB;AACtB,SAASC,WAAU,MAAM;AACrB,QAAM,SAAS,OAAO,KAAK,WAAW,WAAW,KAAK,SAAS,CAAC;AAChE,QAAM,SAAS,OAAO,KAAK,WAAW,WAAW,KAAK,SAAS,CAAC;AAChE,QAAM,SAAS,KAAK;AACpB,QAAM,aAAa,KAAK,aAAa,KAAK,aAAa;AAAA,IACnD,GAAG,QAAQ;AAAA,IACX,GAAG,KAAK;AAAA,EACZ;AACA,SAAO,UAAY;AAAA,IACf,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA,cAAc;AAAA,IACd;AAAA,EACJ,CAAC;AACL;;;ACjBA,IAAAC,cAAkB;AAEX,IAAM,MAAMC,WAAU;AAAA,EAC5B,QAAQ;AAAA,IACP,cAAc,cAAE,OAAO;AAAA,IACvB,MAAM,cAAE,OAAO,OAAO,EAAE,QAAQ,IAAI;AAAA,IAEpC,gBAAgB,cAAE,OAAO;AAAA,IACzB,gBAAgB,cAAE,OAAO;AAAA,IAEzB,wBAAwB,cAAE,OAAO;AAAA,IACjC,4BAA4B,cAAE,OAAO;AAAA,IACrC,kCAAkC,cAAE,OAAO,EAAE,IAAI;AAAA,IACjD,2BAA2B,cAAE,OAAO,EAAE,QAAQ,MAAM;AAAA,IAEpD,wBAAwB,cAAE,OAAO;AAAA,IACjC,4BAA4B,cAAE,OAAO;AAAA,IACrC,kCAAkC,cAAE,OAAO,EAAE,IAAI;AAAA,IACjD,mCAAmC,cAAE,OAAO,EAAE,QAAQ,MAAM;AAAA,IAC5D,2BAA2B,cAAE,OAAO,EAAE,QAAQ,iGAAiG;AAAA,IAE/I,gBAAgB,cAAE,OAAO,EAAE,QAAQ,gBAAgB;AAAA,IACnD,gBAAgB,cAAE,OAAO,OAAO,EAAE,QAAQ,GAAG;AAAA,IAC7C,iBAAiB,cAAE,OAAO;AAAA,IAC1B,oBAAoB,cAAE,OAAO;AAAA,IAE7B,uBAAuB,cAAE,OAAO;AAAA,IAChC,qBAAqB,cAAE,OAAO;AAAA,IAC9B,mBAAmB,cAAE,OAAO;AAAA,IAC5B,mBAAmB,cAAE,OAAO,EAAE,QAAQ,MAAM;AAAA,IAC5C,uBAAuB,cAAE,OAAO;AAAA,IAChC,uBAAuB,cAAE,OAAO;AAAA,EACjC;AAAA,EAEA,QAAQ,CAAC;AAAA,EAET,QAAQ;AAAA,IACP,iBAAiB,cAAE,OAAO,EAAE,IAAI;AAAA,IAChC,qBAAqB,cAAE,OAAO,EAAE,IAAI;AAAA,IACpC,4BAA4B,cAAE,OAAO;AAAA,EACtC;AAAA,EAEA,YAAY;AAAA,IACX,cAAc,QAAQ,IAAI;AAAA,IAC1B,MAAM,QAAQ,IAAI;AAAA,IAClB,iBAAiB,QAAQ,IAAI;AAAA,IAC7B,qBAAqB,QAAQ,IAAI;AAAA,IACjC,gBAAgB,QAAQ,IAAI;AAAA,IAC5B,gBAAgB,QAAQ,IAAI;AAAA,IAC5B,wBAAwB,QAAQ,IAAI;AAAA,IACpC,4BAA4B,QAAQ,IAAI;AAAA,IACxC,kCAAkC,QAAQ,IAAI;AAAA,IAC9C,2BAA2B,QAAQ,IAAI;AAAA,IACvC,wBAAwB,QAAQ,IAAI;AAAA,IACpC,4BAA4B,QAAQ,IAAI;AAAA,IACxC,kCAAkC,QAAQ,IAAI;AAAA,IAC9C,mCAAmC,QAAQ,IAAI;AAAA,IAC/C,2BAA2B,QAAQ,IAAI;AAAA,IACvC,gBAAgB,QAAQ,IAAI;AAAA,IAC5B,gBAAgB,QAAQ,IAAI;AAAA,IAC5B,iBAAiB,QAAQ,IAAI;AAAA,IAC7B,oBAAoB,QAAQ,IAAI;AAAA,IAChC,uBAAuB,QAAQ,IAAI;AAAA,IACnC,qBAAqB,QAAQ,IAAI;AAAA,IACjC,mBAAmB,QAAQ,IAAI;AAAA,IAC/B,mBAAmB,QAAQ,IAAI;AAAA,IAC/B,uBAAuB,QAAQ,IAAI;AAAA,IACnC,uBAAuB,QAAQ,IAAI;AAAA,IACnC,4BAA4B,QAAQ,IAAI;AAAA,EACzC;AAAA,EACA,wBAAwB;AACzB,CAAC;;;ACxED,wBAAuB;AAEhB,IAAM,eAAe,kBAAAC,QAAW,gBAAgB;AAAA,EACtD,MAAM,IAAI;AAAA,EACV,MAAM,IAAI;AAAA,EACV,QAAQ;AAAA,EACR,MAAM;AAAA,IACL,MAAM,IAAI;AAAA,IACV,MAAM,IAAI;AAAA,EACX;AACD,CAAC;;;ACHM,SAAS,2BAA2B;AAAA,EAC1C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAAqC;AACpC,SAAO;AAAA;AAAA,SAEC,OAAO,KAAK,MAAM,GAAG,EAAE,GAAG,CAAC,IAAI,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAOF,QAAQ,OAAO,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUhE,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAgBK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAclB;;;AClDA,eAAsB,mBAAmB;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAA6B;AAC5B,QAAM,eAAe,2BAA2B;AAAA,IAC/C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,MAAM,GAAG,IAAI,eAAe;AAAA,EAC7B,CAAC;AAED,QAAM,eAA6B;AAAA,IAClC,MAAM,IAAI;AAAA,IACV,IAAI;AAAA,IACJ,SAAS;AAAA,IACT,MAAM;AAAA,EACP;AAEA,QAAM,aAAa,SAAS,YAAY;AACzC;;;ACnCA,4BAA0B;;;ACD1B,oBAA6B;AAEtB,IAAM,SAAS,IAAI,2BAAa;;;ACFhC,IAAM,oBAAN,cAAgC,MAAM;AAAA,EAC5C,YAAY,SAAkB;AAC7B,UAAM,WAAW,eAAe;AAAA,EACjC;AACD;;;AFIO,IAAM,WAAO,sBAAAC,SAAc,OAAO,QAAyB;AACjE,MAAI,QAAQ,cAAc,OAAO,YAAY;AAC5C,YAAQ,mBAAmB,YAAY;AACtC,UAAI;AACH,cAAM,EAAE,IAAI,IAAI,MAAM,QAAQ,UAA2B;AAEzD,eAAO;AAAA,MACR,SAAS,OAAO;AACf,cAAM,IAAI,kBAAkB,OAAO,KAAK,aAAa;AAAA,MACtD;AAAA,IACD;AAEA,YAAQ,2BAA2B,OAAO,SAAiB;AAC1D,YAAM,SAAS,MAAM,QAAQ,iBAAiB;AAE9C,YAAM,SAAS,MAAM,OAAO,OAAO,UAAU;AAAA,QAC5C,OAAO;AAAA,UACN;AAAA,UACA,cAAc;AAAA,YACb;AAAA,UACD;AAAA,QACD;AAAA,QACA,SAAS;AAAA,UACR,cAAc;AAAA,QACf;AAAA,MACD,CAAC;AAED,UAAI,CAAC,QAAQ;AACZ,cAAM,IAAI,kBAAkB,OAAO,cAAc,QAAQ,aAAa;AAAA,MACvE;AAEA,YAAM,EAAE,cAAc,GAAG,WAAW,IAAI;AAExC,aAAO;AAAA,QACN;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAAA,EACD,CAAC;AACF,CAAC;;;AG/CM,IAAM,kBAAN,cAA8B,MAAM;AAAC;;;AXW5C,eAAsB,cAAc,KAAsB;AACzD,MACE,iBAAkC,EAClC,SAAS,IAAI,EACb;AAAA,IACA;AAAA,IACA;AAAA,MACC,QAAQ;AAAA,QACP,MAAM,CAAC,SAAS;AAAA,QAChB,SAAS;AAAA,QACT,UAAU,CAAC,EAAE,YAAY,CAAC,EAAE,CAAC;AAAA,QAC7B,MAAM,cAAE,OAAO;AAAA,UACd,MAAM,cAAE,OAAO;AAAA,UACf,OAAO,cAAE,OAAO,EAAE,MAAM;AAAA,QACzB,CAAC;AAAA,MACF;AAAA,IACD;AAAA,IACA,OAAO,SAAS,UAAU;AACzB,YAAM,SAAS,MAAM,QAAQ,iBAAiB;AAC9C,YAAM,EAAE,OAAO,UAAU,KAAK,IAAI,QAAQ;AAE1C,YAAM,oBAAoB,MAAM,OAAO,KAAK,UAAU;AAAA,QACrD,OAAO;AAAA,UACN,OAAO;AAAA,UACP,IAAI;AAAA,YACH,KAAK;AAAA,UACN;AAAA,QACD;AAAA,MACD,CAAC;AAED,UAAI,mBAAmB;AACtB,cAAM,IAAI,gBAAgB,OAAO,KAAK,cAAc;AAAA,MACrD;AAEA,YAAM,cAAc,MAAM,OAAO,KAAK,WAAW;AAAA,QAChD,OAAO;AAAA,UACN,IAAI;AAAA,QACL;AAAA,MACD,CAAC;AAED,UAAI,CAAC,aAAa;AACjB,cAAM,IAAI,gBAAgB,OAAO,KAAK,SAAS;AAAA,MAChD;AAEA,YAAM,0BAA0B,MAAM,OAAO,MAAM,UAAU;AAAA,QAC5D,OAAO;AAAA,UACN;AAAA,UACA,MAAM;AAAA,QACP;AAAA,MACD,CAAC;AAED,YAAM,EAAE,OAAO,aAAa,IAAI;AAEhC,UAAI,iBAAiB,YAAY,CAAC,yBAAyB;AAC1D,cAAM,EAAE,IAAI,iBAAiB,IAAI,MAAM,OAAO,MAAM,OAAO;AAAA,UAC1D,MAAM;AAAA,YACL;AAAA,YACA,MAAM;AAAA,YACN,SAAS;AAAA,UACV;AAAA,QACD,CAAC;AAED,YAAI;AACH,gBAAM,mBAAmB;AAAA,YACxB;AAAA,YACA,UAAU;AAAA,YACV;AAAA,YACA,MAAM;AAAA,UACP,CAAC;AAAA,QACF,QAAQ;AACP,gBAAM,IAAI,gBAAgB,OAAO,SAAS,UAAU;AAAA,QACrD;AAAA,MACD;AAEA,YAAM,OAAO,KAAK,OAAO;AAAA,QACxB,OAAO;AAAA,UACN,IAAI;AAAA,QACL;AAAA,QACA,MAAM;AAAA,UACL;AAAA,QACD;AAAA,MACD,CAAC;AAED,YAAM,OAAO,GAAG,EAAE,KAAK;AAAA,IACxB;AAAA,EACD;AACF;","names":["import_zod","env","createEnv","import_zod","createEnv","nodemailer","fastifyPlugin"]}