{"version":3,"sources":["../../../../src/http/routes/invites/get-invite.ts","../../../../../../packages/auth/src/index.ts","../../../../../../packages/auth/src/subjects/billing.ts","../../../../../../packages/auth/src/subjects/invite.ts","../../../../../../packages/auth/src/subjects/organization.ts","../../../../../../packages/auth/src/models/organization.ts","../../../../../../packages/auth/src/subjects/project.ts","../../../../../../packages/auth/src/models/project.ts","../../../../../../packages/auth/src/subjects/user.ts","../../../../../../packages/auth/src/models/user.ts","../../../../../../packages/auth/src/roles.ts","../../../../src/errors/messages.ts","../../../../src/lib/prisma.ts","../../../../src/http/routes/_errors/bad-request-error.ts"],"sourcesContent":["import { rolesSchema } from '@saas/auth'\nimport { FastifyInstance } from 'fastify'\nimport { ZodTypeProvider } from 'fastify-type-provider-zod'\nimport z from 'zod'\n\nimport { errors } from '@/errors/messages'\nimport { prisma } from '@/lib/prisma'\n\nimport { BadRequestError } from '../_errors/bad-request-error'\n\nexport async function getInvite(app: FastifyInstance) {\n\tapp.withTypeProvider<ZodTypeProvider>().get(\n\t\t'/invites/:inviteId',\n\t\t{\n\t\t\tschema: {\n\t\t\t\ttags: ['Invites'],\n\t\t\t\tsummary: 'Get an invite details.',\n\t\t\t\tparams: z.object({\n\t\t\t\t\tinviteId: z.string().uuid(),\n\t\t\t\t}),\n\t\t\t\tresponse: {\n\t\t\t\t\t200: z.object({\n\t\t\t\t\t\tinvite: z.object({\n\t\t\t\t\t\t\tid: z.string().uuid(),\n\t\t\t\t\t\t\temail: z.string().email(),\n\t\t\t\t\t\t\trole: rolesSchema,\n\t\t\t\t\t\t\tcreatedAt: z.date(),\n\t\t\t\t\t\t\tauthor: z\n\t\t\t\t\t\t\t\t.object({\n\t\t\t\t\t\t\t\t\tid: z.string().uuid(),\n\t\t\t\t\t\t\t\t\tname: z.string().nullable(),\n\t\t\t\t\t\t\t\t\temail: z.string().email(),\n\t\t\t\t\t\t\t\t\tavatarUrl: z.string().nullable(),\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.nullable(),\n\t\t\t\t\t\t\torganization: z.object({\n\t\t\t\t\t\t\t\tname: z.string(),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}),\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tasync (request, reply) => {\n\t\t\tconst { inviteId } = request.params\n\n\t\t\tconst invite = await prisma.invite.findUnique({\n\t\t\t\twhere: { id: inviteId },\n\t\t\t\tselect: {\n\t\t\t\t\tid: true,\n\t\t\t\t\temail: true,\n\t\t\t\t\trole: true,\n\t\t\t\t\tcreatedAt: true,\n\t\t\t\t\tauthor: {\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tid: true,\n\t\t\t\t\t\t\tname: true,\n\t\t\t\t\t\t\tavatarUrl: true,\n\t\t\t\t\t\t\temail: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\torganization: {\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tname: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tif (!invite) {\n\t\t\t\tthrow new BadRequestError(errors.organizations.invites.NOT_FOUND)\n\t\t\t}\n\n\t\t\treturn reply.status(200).send({\n\t\t\t\tinvite,\n\t\t\t})\n\t\t},\n\t)\n}\n","import {\n\tAbilityBuilder,\n\tCreateAbility,\n\tcreateMongoAbility,\n\tMongoAbility,\n} from '@casl/ability'\nimport { z } from 'zod'\n\nimport { errors } from './messages/error'\nimport { User } from './models/user'\nimport { permissions } from './permissions'\nimport { billingSubject } from './subjects/billing'\nimport { inviteSubject } from './subjects/invite'\nimport { organizationSubject } from './subjects/organization'\nimport { projectSubject } from './subjects/project'\nimport { userSubject } from './subjects/user'\n\nexport * from './models/organization'\nexport * from './models/project'\nexport * from './models/user'\nexport * from './roles'\n\nconst appAbilitiesSchema = z.union([\n\tuserSubject,\n\tprojectSubject,\n\torganizationSubject,\n\tinviteSubject,\n\tbillingSubject,\n\tz.tuple([z.literal('manage'), z.literal('all')]),\n])\n\ntype AppAbilities = z.infer<typeof appAbilitiesSchema>\n\nexport type AppAbility = MongoAbility<AppAbilities>\nexport const createAppAbility = createMongoAbility as CreateAbility<AppAbility>\n\nexport function defineAbilityFor(user: User) {\n\tconst builder = new AbilityBuilder(createAppAbility)\n\n\tif (typeof permissions[user.role] !== 'function') {\n\t\tthrow new Error(errors.PERMISSIONS_NOT_FOUND.replace('{role}', user.role))\n\t}\n\n\tpermissions[user.role](user, builder)\n\n\tconst ability = builder.build({\n\t\tdetectSubjectType(subject) {\n\t\t\treturn subject.__typename\n\t\t},\n\t})\n\n\tability.can = ability.can.bind(ability)\n\tability.cannot = ability.cannot.bind(ability)\n\n\treturn ability\n}\n","import { z } from 'zod'\n\nexport const billingSubject = z.tuple([\n\tz.union([z.literal('manage'), z.literal('get'), z.literal('export')]),\n\tz.literal('Billing'),\n])\n\nexport type BillingSubject = z.infer<typeof billingSubject>\n","import { z } from 'zod'\n\nexport const inviteSubject = z.tuple([\n\tz.union([\n\t\tz.literal('manage'),\n\t\tz.literal('get'),\n\t\tz.literal('create'),\n\t\tz.literal('delete'),\n\t]),\n\tz.literal('Invite'),\n])\n\nexport type InviteSubject = z.infer<typeof inviteSubject>\n","import { z } from 'zod'\n\nimport { organizationSchema } from '../models/organization'\n\nexport const organizationSubject = z.tuple([\n\tz.union([\n\t\tz.literal('manage'),\n\t\tz.literal('update'),\n\t\tz.literal('delete'),\n\t\tz.literal('transfer_ownership'),\n\t]),\n\tz.union([z.literal('Organization'), organizationSchema]),\n])\n\nexport type OrganizationSubject = z.infer<typeof organizationSubject>\n","import { z } from 'zod'\n\nexport const organizationSchema = z.object({\n\t__typename: z.literal('Organization').default('Organization'),\n\tid: z.string(),\n\townerId: z.string(),\n})\n\nexport type Organization = z.infer<typeof organizationSchema>\n","import { z } from 'zod'\n\nimport { projectSchema } from '../models/project'\n\nexport const projectSubject = z.tuple([\n\tz.union([\n\t\tz.literal('manage'),\n\t\tz.literal('get'),\n\t\tz.literal('create'),\n\t\tz.literal('update'),\n\t\tz.literal('delete'),\n\t]),\n\tz.union([z.literal('Project'), projectSchema]),\n])\n\nexport type ProjectSubject = z.infer<typeof projectSubject>\n","import { z } from 'zod'\n\nexport const projectSchema = z.object({\n\t__typename: z.literal('Project').default('Project'),\n\tid: z.string(),\n\townerId: z.string(),\n})\n\nexport type Project = z.infer<typeof projectSchema>\n","import { z } from 'zod'\n\nexport const userSubject = z.tuple([\n\tz.union([\n\t\tz.literal('manage'),\n\t\tz.literal('get'),\n\t\tz.literal('create'),\n\t\tz.literal('update'),\n\t\tz.literal('delete'),\n\t]),\n\n\tz.literal('User'),\n])\n\nexport type UserSubject = z.infer<typeof userSubject>\n","import { z } from 'zod'\n\nimport { rolesSchema } from '../roles'\n\nexport const userSchema = z.object({\n\t// __typename: z.literal('User').default('User'),\n\tid: z.string(),\n\trole: rolesSchema,\n})\n\nexport type User = z.infer<typeof userSchema>\n","import { z } from 'zod'\n\nexport const rolesSchema = z.union([\n\tz.literal('ADMIN'),\n\tz.literal('MEMBER'),\n\tz.literal('BILLING'),\n])\n\nexport type Role = z.infer<typeof rolesSchema>\n","/* eslint-disable prettier/prettier */\nexport const errors = {\n\tapi: {\n\t\tVALIDATION_ERROR: 'Validation error',\n\t\tSERVER_ERROR: 'Internal server error',\n\t},\n\tservices: {\n\t\tSEND_EMAIL: 'An error occurred while trying to send the e-mail',\n\t\tGITHUB_ALREADY_CONNECTED: 'You already have a GitHub account connected',\n\t\tGITHUB_ALREADY_CONNECTED_SOMEONE_ELSE: 'This Github account is already connected with another account',\n\t\tGOOGLE_ALREADY_CONNECTED: 'You already have a Google account connected',\n\t\tGOOGLE_ALREADY_CONNECTED_SOMEONE_ELSE: 'This Google account is already connected with another account',\n\t},\n\tuser: {\n\t\tALREADY_EXISTS: 'An user with same e-mail already exists',\n\t\tNOT_FOUND: 'User not found',\n\t\tACCOUNT_NOT_FOUND: 'Account not found',\n\t\tEMAIL_VALIDATION_NOT_FOUND: 'E-mail change validation not found',\n\t\tEMAIL_VALIDATION_EXPIRED: 'E-mail change validation does not exists or already expired',\n\t\tEMAIL_VALIDATION_INVALID: 'Invalid validation code'\n\t},\n\tauth: {\n\t\tNOT_PASSWORD_FOUND: 'User does not have a password, use social sign-in',\n\t\tINVALID_CREDENTIALS: 'Invalid credentials',\n\t\tINVALID_TOKEN: 'Invalid authentication token',\n\t\tINVALID_EMAIL_TOKEN: 'The token provied is not valid. Note: The code is valid for 5 minutes',\n\t\tINVALID_PASSWORD_TOKEN: 'Unable to reset password. Ensure your recovery code is valid and try again. Note: The code is valid for 5 minutes',\n\t\tLAST_METHOD_AVAILABLE: 'This service is the only access method available. Set a password or connect with another provider first',\n\t\tGITHUB_EMAIL_NOT_FOUND: 'Your GitHub account does not have an e-mail to authenticate',\n\t\tPASSWORD_NUMBER: 'Enter one number.',\n\t\tPASSWORD_UPPER: 'Enter one upper case letter.',\n\t\tPASSWORD_LOWER: 'Enter one lower case letter.',\n\t\tPASSWORD_SPECIAL: 'Enter one special character.',\n\t\tPASSWORD_LENGTH: 'Enter at least 6 characters.',\n\t},\n\torganizations: {\n\t\tentity: {\n\t\t\tNOT_FOUND: 'Organization not found',\n\t\t\tNOT_MEMBER: 'The user is not a member of this organization',\n\t\t\tALREADY_EXISTS: 'There is another organization using the same name. Choose a different one',\n\t\t\tCANNOT_SHUTDOWN: 'You are not allowed to shutdown this organization',\n\t\t\tCANNOT_TRANSFER: 'You are not allowed to transfer ownership of this organization',\n\t\t\tCANNOT_UPDATE: 'You are not allowed to update this organization',\n\t\t\tCANNOT_LEAVE: 'You are the owner of this organization, to leave it you must transfer the ownership first',\n\t\t},\n\t\tbilling: {\n\t\t\tCANNOT_LIST: 'You are not allowed to get billing details from this organization',\n\t\t},\n\t\tdomain: {\n\t\t\tALREADY_EXISTS: 'Another organization with same domain already exists',\n\t\t\tCHECK_DNS: 'Error checking DNS information',\n\t\t\tTXT_NOT_FOUND: 'A valid TXT record was not found in the DNS records',\n\t\t\tTXT_INVALID: 'A valid TXT record was found, but does not match in the DNS records. Check your DNS values.',\n\t\t},\n\t\tmembers: {\n\t\t\tCANNOT_ACCESS: 'You are not a member of this organization',\n\t\t\tCANNOT_LIST: 'You are not allowed to list organization members',\n\t\t\tCANNOT_DELETE: 'You are not allowed to remove this organization member',\n\t\t\tCANNOT_UPDATE: 'You are not allowed to update this organization member',\n\t\t},\n\t\tinvites: {\n\t\t\tNOT_FOUND: 'Invite not found or expired',\n\t\t\tNOT_ALLOWED: 'This invite belongs to another user',\n\t\t\tAUTOJOIN_DOMAIN: 'Users with {domain} domain will join your organization automatically on sign in',\n\t\t\tALREADY_EXISTS: 'Another invite with same e-mail already exists',\n\t\t\tALREADY_MEMBER: 'A member with this e-mail already belongs to your organization',\n\t\t\tCANNOT_SEND: 'You are not allowed to create a new invite',\n\t\t\tCANNOT_LIST: 'You are not allowed to get organization invites',\n\t\t\tCANNOT_REVOKE: 'You are not allowed to revoke an invite',\n\t\t},\n\t},\n\tprojects: {\n\t\tNOT_FOUND: 'Project not found',\n\t\tALREADY_EXISTS: 'There is another project in this organization using the same project name. Choose a different one',\n\t\tCANNOT_LIST: 'You are not allowed to list projects',\n\t\tCANNOT_GET: 'You are not allowed to get a project',\n\t\tCANNOT_CREATE: 'You are not allowed to create a new project',\n\t\tCANNOT_UPDATE: 'You are not allowed to update this project',\n\t\tCANNOT_DELETE: 'You are not allowed to remove this project',\n\t},\n\tfiles: {\n\t\tNOT_FOUND: 'Select a file to update',\n\t\tMAX_SIZE: 'Your avatar must have less than 2mb',\n\t\tPROCESSING: 'An unexpected error occurred while processing your file', \n\t\tFORMAT: 'The file selected is not a valid image',\n\t\tUPLOAD: 'An unexpected error occurred during file upload',\n\t\tDELETE: 'An unexpected error occurred during file removal',\n\t}\n}\n","import { PrismaClient } from '@prisma/client'\n\nexport const prisma = new PrismaClient()\n","export class BadRequestError extends Error {}\n"],"mappings":"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","names":["import_zod","import_zod","import_zod","import_zod","import_zod","import_zod","import_zod","import_zod","import_zod","import_zod","errors","z","errors"]}