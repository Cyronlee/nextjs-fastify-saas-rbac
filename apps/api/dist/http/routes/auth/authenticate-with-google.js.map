{"version":3,"sources":["../../../../src/http/routes/auth/authenticate-with-google.ts","../../../../../../node_modules/.pnpm/@t3-oss+env-core@0.11.1_typescript@5.6.3_zod@3.23.8/node_modules/@t3-oss/env-core/dist/index.js","../../../../../../node_modules/.pnpm/@t3-oss+env-nextjs@0.11.1_typescript@5.6.3_zod@3.23.8/node_modules/@t3-oss/env-nextjs/dist/index.js","../../../../../../packages/env/index.ts","../../../../src/lib/prisma.ts"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { env } from '@saas/env'\nimport { FastifyInstance } from 'fastify'\nimport { ZodTypeProvider } from 'fastify-type-provider-zod'\nimport { z } from 'zod'\n\nimport { prisma } from '@/lib/prisma'\n\n\nexport async function authenticateWithGoogle(app: FastifyInstance) {\n\tapp.withTypeProvider<ZodTypeProvider>().post(\n\t\t'/sessions/google',\n\t\t{\n\t\t\tschema: {\n\t\t\t\ttags: ['Auth'],\n\t\t\t\tsummary: 'Authenticate with Google.',\n\t\t\t\tbody: z.object({\n\t\t\t\t\tcode: z.string(),\n\t\t\t\t}),\n\t\t\t\tresponse: {\n\t\t\t\t\t201: z.object({\n\t\t\t\t\t\ttoken: z.string(),\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tasync (request, reply) => {\n\t\t\tconst { code } = request.body\n\n\t\t\t/**\n\t\t\t * Authorize\n\t\t\t */\n\t\t\tconst googleOAuthURL = new URL('token', 'https://oauth2.googleapis.com')\n\n\t\t\tgoogleOAuthURL.searchParams.set('code', code)\n\t\t\tgoogleOAuthURL.searchParams.set('client_id', env.GOOGLE_OAUTH_CLIENT_ID)\n\t\t\tgoogleOAuthURL.searchParams.set('client_secret', env.GOOGLE_OAUTH_CLIENT_SECRET)\n\t\t\tgoogleOAuthURL.searchParams.set('redirect_uri', env.GOOGLE_OAUTH_CLIENT_REDIRECT_URI)\n\t\t\tgoogleOAuthURL.searchParams.set('grant_type', 'authorization_code') \n\n\t\t\tconst googleAccessTokenResponse = await fetch(googleOAuthURL, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json',\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tconst googleAccessTokenData = await googleAccessTokenResponse.json()\n\n\t\t\tconst { access_token: GoogleAccessToken } = z\n\t\t\t\t.object({\n\t\t\t\t\taccess_token: z.string(),\n\t\t\t\t\texpires_in: z.coerce.number().int(),\n\t\t\t\t\trefresh_token: z.string(),\n\t\t\t\t\tscope: z.string(),\n\t\t\t\t\ttoken_type: z.literal('Bearer'),\n\t\t\t\t\tid_token: z.string(),\n\t\t\t\t})\n\t\t\t\t.parse(googleAccessTokenData)\n\t\t\t\n\t\t\t/**\n\t\t\t * Fetch\n\t\t\t */\n\t\t\tconst googleUserInfoURL = new URL('oauth2/v3/userinfo', 'https://www.googleapis.com')\n\t\t\tgoogleUserInfoURL.searchParams.set('access_token', GoogleAccessToken)\n\t\t\t\n\t\t\tconst githubUserResponse = await fetch(googleUserInfoURL, {\n\t\t\t\tmethod: 'GET',\n\t\t\t})\n\n\t\t\tconst githubUserData = await githubUserResponse.json()\n\n\t\t\tconst {\n\t\t\t\tsub: googleId,\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tpicture: avatarUrl,\n\t\t\t} = z\n\t\t\t\t.object({\n\t\t\t\t\tsub: z.string(),\n\t\t\t\t\tname: z.string(),\n\t\t\t\t\tgiven_name: z.string(),\n\t\t\t\t\tpicture: z.string(),\n\t\t\t\t\temail: z.string().email(),\n\t\t\t\t\temail_verified: z.boolean(),\n\t\t\t\t})\n\t\t\t\t.parse(githubUserData)\n\n\t\t\t/**\n\t\t\t * Actions\n\t\t\t */\n\t\t\tlet token: string\n\n\t\t\tlet account = await prisma.account.findUnique({\n\t\t\t\twhere: {\n\t\t\t\t\tprovider_providerAccountId: {\n\t\t\t\t\t\tprovider: 'GOOGLE',\n\t\t\t\t\t\tproviderAccountId: googleId,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t})\n\n\t\t\t/**\n\t\t\t * If account already connected, sign-in\n\t\t\t */\n\t\t\tif (account) {\n\t\t\t\ttoken = await reply.jwtSign(\n\t\t\t\t\t{\n\t\t\t\t\t\tsub: account.userId,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\texpiresIn: '7d',\n\t\t\t\t\t},\n\t\t\t\t)\n\n\t\t\t\treturn reply.status(201).send({ token })\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * If account not connected, sign-in\n\t\t\t */\n\t\t\tlet user = await prisma.user.findUnique({\n\t\t\t\twhere: { email },\n\t\t\t})\n\n\t\t\tif (!user) {\n\t\t\t\tuser = await prisma.user.create({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\temail,\n\t\t\t\t\t\temailValidatedAt: new Date(),\n\t\t\t\t\t\tavatarUrl,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\n\t\t\taccount = await prisma.account.findUnique({\n\t\t\t\twhere: {\n\t\t\t\t\tprovider_userId: {\n\t\t\t\t\t\tprovider: 'GOOGLE',\n\t\t\t\t\t\tuserId: user.id,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tif (!account) {\n\t\t\t\taccount = await prisma.account.create({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tprovider: 'GOOGLE',\n\t\t\t\t\t\tproviderAccountId: googleId,\n\t\t\t\t\t\tuserId: user.id,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\n\t\t\ttoken = await reply.jwtSign(\n\t\t\t\t{\n\t\t\t\t\tsub: user.id,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\texpiresIn: '7d',\n\t\t\t\t},\n\t\t\t)\n\n\t\t\treturn reply.status(201).send({ token })\n\t\t},\n\t)\n}\n","import { object } from 'zod';\n\nfunction createEnv(opts) {\n    const runtimeEnv = opts.runtimeEnvStrict ?? opts.runtimeEnv ?? process.env;\n    const emptyStringAsUndefined = opts.emptyStringAsUndefined ?? false;\n    if (emptyStringAsUndefined) {\n        for (const [key, value] of Object.entries(runtimeEnv)){\n            if (value === \"\") {\n                delete runtimeEnv[key];\n            }\n        }\n    }\n    const skip = !!opts.skipValidation;\n    // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n    if (skip) return runtimeEnv;\n    const _client = typeof opts.client === \"object\" ? opts.client : {};\n    const _server = typeof opts.server === \"object\" ? opts.server : {};\n    const _shared = typeof opts.shared === \"object\" ? opts.shared : {};\n    const client = object(_client);\n    const server = object(_server);\n    const shared = object(_shared);\n    const isServer = opts.isServer ?? (typeof window === \"undefined\" || \"Deno\" in window);\n    const allClient = client.merge(shared);\n    const allServer = server.merge(shared).merge(client);\n    const parsed = isServer ? allServer.safeParse(runtimeEnv) // on server we can validate all env vars\n     : allClient.safeParse(runtimeEnv); // on client we can only validate the ones that are exposed\n    const onValidationError = opts.onValidationError ?? ((error)=>{\n        console.error(\"❌ Invalid environment variables:\", error.flatten().fieldErrors);\n        throw new Error(\"Invalid environment variables\");\n    });\n    const onInvalidAccess = opts.onInvalidAccess ?? ((_variable)=>{\n        throw new Error(\"❌ Attempted to access a server-side environment variable on the client\");\n    });\n    if (parsed.success === false) {\n        return onValidationError(parsed.error);\n    }\n    const isServerAccess = (prop)=>{\n        if (!opts.clientPrefix) return true;\n        return !prop.startsWith(opts.clientPrefix) && !(prop in shared.shape);\n    };\n    const isValidServerAccess = (prop)=>{\n        return isServer || !isServerAccess(prop);\n    };\n    const ignoreProp = (prop)=>{\n        return prop === \"__esModule\" || prop === \"$$typeof\";\n    };\n    const extendedObj = (opts.extends ?? []).reduce((acc, curr)=>{\n        return Object.assign(acc, curr);\n    }, {});\n    const fullObj = Object.assign(parsed.data, extendedObj);\n    const env = new Proxy(fullObj, {\n        get (target, prop) {\n            if (typeof prop !== \"string\") return undefined;\n            if (ignoreProp(prop)) return undefined;\n            if (!isValidServerAccess(prop)) return onInvalidAccess(prop);\n            return Reflect.get(target, prop);\n        }\n    });\n    // biome-ignore lint/suspicious/noExplicitAny: <explanation>\n    return env;\n}\n\nexport { createEnv };\n","import { createEnv as createEnv$1 } from '@t3-oss/env-core';\n\nconst CLIENT_PREFIX = \"NEXT_PUBLIC_\";\nfunction createEnv(opts) {\n    const client = typeof opts.client === \"object\" ? opts.client : {};\n    const server = typeof opts.server === \"object\" ? opts.server : {};\n    const shared = opts.shared;\n    const runtimeEnv = opts.runtimeEnv ? opts.runtimeEnv : {\n        ...process.env,\n        ...opts.experimental__runtimeEnv\n    };\n    return createEnv$1({\n        ...opts,\n        shared,\n        client,\n        server,\n        clientPrefix: CLIENT_PREFIX,\n        runtimeEnv\n    });\n}\n\nexport { createEnv };\n","/* eslint-disable prettier/prettier */\nimport { createEnv } from '@t3-oss/env-nextjs'\nimport { z } from 'zod'\n\nexport const env = createEnv({\n\tserver: {\n\t\tDATABASE_URL: z.string(),\n\t\tPORT: z.coerce.number().default(3333),\n\n\t\tJWT_SECRET_KEY: z.string(),\n\t\tJWT_PUBLIC_KEY: z.string(),\n\n\t\tGITHUB_OAUTH_CLIENT_ID: z.string(),\n\t\tGITHUB_OAUTH_CLIENT_SECRET: z.string(),\n\t\tGITHUB_OAUTH_CLIENT_REDIRECT_URI: z.string().url(),\n\t\tGITHUB_OAUTH_CLIENT_SCOPE: z.string().default('user'),\n\n\t\tGOOGLE_OAUTH_CLIENT_ID: z.string(),\n\t\tGOOGLE_OAUTH_CLIENT_SECRET: z.string(),\n\t\tGOOGLE_OAUTH_CLIENT_REDIRECT_URI: z.string().url(),\n\t\tGOOGLE_OAUTH_CLIENT_RESPONSE_TYPE: z.string().default('code'),\n\t\tGOOGLE_OAUTH_CLIENT_SCOPE: z.string().default('https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile'),\n\n\t\tMAIL_SMTP_HOST: z.string().default('smtp.gmail.com'),\n\t\tMAIL_SMTP_PORT: z.coerce.number().default(465),\n\t\tMAIL_SMTP_EMAIL: z.string(),\n\t\tMAIL_SMTP_PASSWORD: z.string(),\n\n\t\tCLOUDFLARE_ACCOUNT_ID: z.string(),\n\t\tCLOUDFLARE_ENDPOINT: z.string(),\n\t\tCLOUDFLARE_BUCKET: z.string(),\n\t\tCLOUDFLARE_REGION: z.string().default('auto'),\n\t\tCLOUDFLARE_ACCESS_KEY: z.string(),\n\t\tCLOUDFLARE_SECRET_KEY: z.string(),\n\t},\n\n\tclient: {},\n\n\tshared: {\n\t\tNEXT_PUBLIC_URL: z.string().url(),\n\t\tNEXT_PUBLIC_API_URL: z.string().url(),\n\t\tNEXT_PUBLIC_CLOUDFLARE_URL: z.string(),\n\t},\n\n\truntimeEnv: {\n\t\tDATABASE_URL: process.env.DATABASE_URL,\n\t\tPORT: process.env.PORT,\n\t\tNEXT_PUBLIC_URL: process.env.NEXT_PUBLIC_URL,\n\t\tNEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL,\n\t\tJWT_SECRET_KEY: process.env.JWT_SECRET_KEY,\n\t\tJWT_PUBLIC_KEY: process.env.JWT_PUBLIC_KEY,\n\t\tGITHUB_OAUTH_CLIENT_ID: process.env.GITHUB_OAUTH_CLIENT_ID,\n\t\tGITHUB_OAUTH_CLIENT_SECRET: process.env.GITHUB_OAUTH_CLIENT_SECRET,\n\t\tGITHUB_OAUTH_CLIENT_REDIRECT_URI: process.env.GITHUB_OAUTH_CLIENT_REDIRECT_URI,\n\t\tGITHUB_OAUTH_CLIENT_SCOPE: process.env.GITHUB_OAUTH_CLIENT_SCOPE,\n\t\tGOOGLE_OAUTH_CLIENT_ID: process.env.GOOGLE_OAUTH_CLIENT_ID,\n\t\tGOOGLE_OAUTH_CLIENT_SECRET: process.env.GOOGLE_OAUTH_CLIENT_SECRET,\n\t\tGOOGLE_OAUTH_CLIENT_REDIRECT_URI: process.env.GOOGLE_OAUTH_CLIENT_REDIRECT_URI,\n\t\tGOOGLE_OAUTH_CLIENT_RESPONSE_TYPE: process.env.GOOGLE_OAUTH_CLIENT_RESPONSE_TYPE,\n\t\tGOOGLE_OAUTH_CLIENT_SCOPE: process.env.GOOGLE_OAUTH_CLIENT_SCOPE,\n\t\tMAIL_SMTP_HOST: process.env.MAIL_SMTP_HOST,\n\t\tMAIL_SMTP_PORT: process.env.MAIL_SMTP_PORT,\n\t\tMAIL_SMTP_EMAIL: process.env.MAIL_SMTP_EMAIL,\n\t\tMAIL_SMTP_PASSWORD: process.env.MAIL_SMTP_PASSWORD,\n\t\tCLOUDFLARE_ACCOUNT_ID: process.env.CLOUDFLARE_ACCOUNT_ID,\n\t\tCLOUDFLARE_ENDPOINT: process.env.CLOUDFLARE_ENDPOINT,\n\t\tCLOUDFLARE_BUCKET: process.env.CLOUDFLARE_BUCKET,\n\t\tCLOUDFLARE_REGION: process.env.CLOUDFLARE_REGION,\n\t\tCLOUDFLARE_ACCESS_KEY: process.env.CLOUDFLARE_ACCESS_KEY,\n\t\tCLOUDFLARE_SECRET_KEY: process.env.CLOUDFLARE_SECRET_KEY,\n\t\tNEXT_PUBLIC_CLOUDFLARE_URL: process.env.NEXT_PUBLIC_CLOUDFLARE_URL,\n\t},\n\temptyStringAsUndefined: true,\n})\n","import { PrismaClient } from '@prisma/client'\n\nexport const prisma = new PrismaClient()\n"],"mappings":"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","names":["env","createEnv","import_zod","createEnv","import_zod"]}